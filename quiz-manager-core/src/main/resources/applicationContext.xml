<?xml version="1.0" encoding="UTF-8"?>
<!-- This was copied here to be able to commit the resources folder -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- <context:property-placeholder location="classpath:/database.properties" 
		/> <context:component-scan base-package="com.foo" /> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName"
			value="org.apache.derby.jdbc.EmbeddedDriver" />
		<property name="url"
			value="jdbc:derby:memory:testDS;create=true" />
		<property name="username" value="root" />
		<property name="password" value="password" />
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertiesFactoryBean"
		id="hibernateProperties">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties"
			ref="hibernateProperties" />
		<property name="packagesToScan">
			<list>
				<value>fr.epita.quiz_manager.datamodel</value>
			</list>
		</property>
	</bean>

	<bean id="questionDAO"
		class="fr.epita.quiz_manager.services.QuestionDAO"></bean>
	<bean id="mcqChoiceDAO"
		class="fr.epita.quiz_manager.services.MCQChoiceDAO"></bean>
	<bean id="userDAO" class="fr.epita.quiz_manager.services.UserDAO"></bean>
	<bean id="quizDAO"
		class="fr.epita.quiz_manager.services.QuizDAO"></bean>
	<bean id="questionQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from Question as question where
				(:id is null or question.id = :id)
			and
				(:type is null or question.type = :type)
			and
				(:title is null or question.title = :title)
		]]></value>
		</constructor-arg>
	</bean>
	
	<bean id="mcqChoiceQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from MCQChoice as mcqchoice where
				(:id is null or mcqchoise.id = :id)
			and
				(:choice is null or mcqchoice.choice like :choice)
			and
				(:correct is null or mcqchoice.correct = :correct)
			and
				(:questionId is null or mcqchoise.question_id = :questionId)
		]]></value>
		</constructor-arg>

	</bean>
	
	
	<bean id="questionService"
		class="fr.epita.quiz_manager.services.QuestionOperationsService">
	</bean>

	<bean id="userQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from UserData as user where
				(:password is null or user.password like :password)
			and
				(:username is null or user.username like :username)
			and
				(:type is null or user.userType = :type)
			and
				(:name is null or user.name like :name)
		]]></value>
		</constructor-arg>

	</bean>
	
	<bean id="quizQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from Quiz as quiz where
				(:id is null or quiz.id like :id)
			and
				(:name is null or quiz.name like :name)
			and
				(:questionList is null or quiz.questionList like :questionList)
		]]></value>
		</constructor-arg>

	</bean>
	
		<bean id="userquizQuery" class="java.lang.String">
		<constructor-arg>
			<value><![CDATA[
			from UserQuiz as userquiz where
				(:id is null or userquiz.id like :id)
			and
				(:user is null or userquiz.user like :user)
			and
				(:quiz is null or userquiz.quiz like :quiz)
			and
				(:score is null or userquiz.score like:score)
		]]></value>
		</constructor-arg>

	</bean>


</beans>